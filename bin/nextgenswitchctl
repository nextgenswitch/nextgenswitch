#!/bin/sh

BIN_PATH="$( cd "$( dirname "$0" )" && pwd )"
BIN="nextgenwitch"
case "$1" in 
start)
   #$PID = `cat $BIN_PATH/pid/monitor.pid`
   if [ -e $BIN_PATH/pid/monitor.pid ]; then
      PID=`cat $BIN_PATH/pid/monitor.pid`
      ps --pid "$PID" > /dev/null
      if [ "$?" -eq 0 ]; then 
         echo "service allready running "
      else
          $0 startmonitor
      fi
   else   
      $0 startmonitor
   fi   
   ;;
startmonitor)
   nohup $0 monitor 0<&- &>/dev/null & echo $!>$BIN_PATH/pid/monitor.pid
   echo "$BIN is starting ..."
   ;;   
startswitch)
   export LD_LIBRARY_PATH=$BIN_PATH/lib:${LD_LIBRARY_PATH}
   cd $BIN_PATH
   ./nextgenswitch &> "/dev/null" & echo $!>$BIN_PATH/pid/nextgenswitch.pid
   echo $BIN started, pid=`cat $BIN_PATH/pid/nextgenswitch.pid`
   ;;   
startconsole)
   export LD_LIBRARY_PATH=$BIN_PATH/lib:${LD_LIBRARY_PATH}
   cd $BIN_PATH
   ./nextgenswitch
   ;;   
firewall)
   iptables-restore < /var/www/html/easypbx/storage/iptables-rules
   ipset create nextgenswitch_temp_block hash:ip timeout 0
   iptables -I INPUT 1 -m set -j DROP  --match-set nextgenswitch_temp_block src
   iptables -I FORWARD 1 -m set -j DROP  --match-set nextgenswitch_temp_block src
   trim() { echo "$1" | perl -p -e 's/^\s+|\s+$//g'; }
   while true; do
   input="$BIN_PATH/logs/temp_block.csv"

   while IFS= read -r line
   do
      echo "$line"
      line=$(trim "${line}")
      echo "$line"
      ipset add nextgenswitch_temp_block $line timeout 600
   done < "$input"
   rm -f $input
   echo "waiting..."
   sleep 30
   done 
   ;;
monitor)
   while true; do
      if [ -e $BIN_PATH/pid/nextgenswitch.pid ]; then
         PID=`cat $BIN_PATH/pid/nextgenswitch.pid`
         ps --pid "$PID" > /dev/null
         if [ "$?" -eq 0 ]; then 
            echo "$BIN service running, everything is fine"
         else
            $0 startswitch
         fi     
      else
         $0 startswitch
      fi
      echo "waiting..."
      sleep 30
   done 
   ;;
stopswitch)
   if [ -e $BIN_PATH/pid/nextgenswitch.pid ]; then
      kill `cat $BIN_PATH/pid/nextgenswitch.pid`
      yes | rm $BIN_PATH/pid/nextgenswitch.pid
   fi
   ;;   
stop)
   #ps -ef | grep "nextgenswitch -d" | grep -v grep | awk '{print $2}' | xargs kill
   #ps -ef | grep "nextgenswitchctl" | grep -v grep | awk '{print $2}' | xargs kill
   $0 stopswitch
   if [ -e $BIN_PATH/pid/monitor.pid ]; then   
      kill `cat $BIN_PATH/pid/monitor.pid`
      yes | rm $BIN_PATH/pid/monitor.pid
   fi
   ;;
restart)
   $0 stopswitch
   ;;
status)
   if [ -e $BIN_PATH/pid/nextgenswitch.pid ]; then
      PID=`cat $BIN_PATH/pid/nextgenswitch.pid`
      ps --pid "$PID" > /dev/null
      if [ "$?" -eq 0 ]; then 
         echo $BIN is running, pid=`cat $BIN_PATH/pid/nextgenswitch.pid`
      else
         echo $BIN is NOT running
      fi 
   else
      echo $BIN is NOT running
      exit 1
   fi
   ;;
*)
   echo "Usage: $0 {start|stop|status|restart|startconsole}"
esac

exit 0 